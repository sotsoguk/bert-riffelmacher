<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coding on bert riffelmacher</title>
    <link>https://www.bert-riffelmacher.de/tags/coding/</link>
    <description>Recent content in coding on bert riffelmacher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 05 Dec 2018 01:40:17 +0100</lastBuildDate>
    
	<atom:link href="https://www.bert-riffelmacher.de/tags/coding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AdventOfCode Day 4</title>
      <link>https://www.bert-riffelmacher.de/post/20181204-aoc04/</link>
      <pubDate>Wed, 05 Dec 2018 01:40:17 +0100</pubDate>
      
      <guid>https://www.bert-riffelmacher.de/post/20181204-aoc04/</guid>
      <description>Today i post only the solution to Day 4. Not nice nor efficient, had one nasty bug so the solution to part 1 as correct, but not the second part. But after four days, i&#39;m still on track. The only highlight of today is the usage of a shortcode to include the code file into this post.
Update: This code is really ugly ;).
\[\int_{a}^{b} x^2 dx\]
import re import numpy as np import operator with open(&amp;#39;input.</description>
    </item>
    
    <item>
      <title>AdventofCode Day 3: No Matter How You Slice It</title>
      <link>https://www.bert-riffelmacher.de/post/aoc2018-day03/</link>
      <pubDate>Tue, 04 Dec 2018 01:30:19 +0100</pubDate>
      
      <guid>https://www.bert-riffelmacher.de/post/aoc2018-day03/</guid>
      <description>Part 1 The main problem for me of the first part of Day 3 was processing the input, which contains the id, coordinates and dimensions of each rectangle:
... #1332 @ 556,501: 15x18 #1333 @ 61,800: 23x29 #1334 @ 3,578: 15x23 ...  My first working, but kind of ugly, solution looked like this:
for line in lines: tmp = line.split() idd = int(tmp[0].strip(&amp;#39;#&amp;#39;)) x,y = map(int,(tmp[2].strip(&amp;#34;:&amp;#34;).split(&amp;#34;,&amp;#34;))) xr,yr = map(int,tmp[3].</description>
    </item>
    
    <item>
      <title>AdventOfCode - Day 1</title>
      <link>https://www.bert-riffelmacher.de/post/adventofcode-day01/</link>
      <pubDate>Sun, 02 Dec 2018 01:08:19 +0100</pubDate>
      
      <guid>https://www.bert-riffelmacher.de/post/adventofcode-day01/</guid>
      <description>I&amp;rsquo;m trying to get back to coding and problem solving at the moment and came across Advent Of Code, which seems to be a very good project to help me get started and keep me motivated. I will try to solve the problems using python, and maybe c++ or any other language if i have the time.
Day 1: Chronal Calibration Part 1 The first part of the first problem was a very good starter for me.</description>
    </item>
    
  </channel>
</rss>